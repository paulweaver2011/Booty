Data types are determinate and permanent for variables. Int, float, double, string, and char are several of the data types that will be used by C# when programming. it is very useful to know what these are and how to use them. According to Microsoft, the creator of the language, "C# is a strongly-typed language. Every variable and constant has a type, as does every expression that evaluates to a value. Every method signature specifies a type for each input parameter and for the return value. The .NET Framework class library defines a set of built-in numeric types as well as more complex types that represent a wide variety of logical constructs, such as the file system, network connections, collections and arrays of objects, and dates. A typical C# program uses types from the class library as well as user-defined types that model the concepts that are specific to the program's problem domain." It's very important to know what data type, as a strongly typed language has specific requirements for using them. 

The XPathNavigator class provides a set of methods that are used to interact with XPathDocument data. You can supplement the standard XPath functions by implementing extension functions and variables for use by XPath query expressions. The SetContext method can accept a user defined context derived from XsltContext. User defined functions are resolved by the custom context.

Extension functions and variables can be useful in prevention of XML injection attacks. In these scenarios user input is assigned to custom variables and processed by extension functions, not as raw input concatenated with processing instructions. Extension functions and variables contain user input so that it only acts on XML data as intended by the designer.

To use extensions you implement a custom XsltContext class along with the interfaces IXsltContextFunction and IXsltContextVariable that support extension functions and variables. An XPathExpression adds user input with its XsltArgumentList to the custom XsltContext.

The XPathExpression represents a compiled query that XPathNavigator uses to find and process the nodes identified by the expression.

The following example shows implementation of a custom context class derived from XsltContext. Comments in the code describe class members and their use in custom functions. Function and variable implementations and a sample application that uses these implementations follow this code segment.
